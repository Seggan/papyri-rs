@fn page(
    $title: str,
    $web_root: str = `https://kaya3.github.io/papyri`,
) $content: block -> {
    @let(w=@match $web_root {"$w/" -> $w, _ -> $web_root}).
    <!DOCTYPE html>
    <html>
    <head><title>$title</><link rel=`stylesheet` type=`text/css` href="$w/papyri.css"></>#
    <body><article>$content</><script type=`text/javascript` src="$w/papyri.js"/></>
    </>
}

@fn bool $b: bool -> $b
@fn int $i: int -> $i
@fn str $s: str -> $s
@fn dict(**$kwargs: any dict) $_: none -> $kwargs
@fn inline $v: inline -> $v
@fn block $v: block -> $v
@fn typeof $v -> @match $v {_: $t -> $t}

@fn attributes(**$d: str? dict) $v: html -> @match $v {
    <$t **$a>*$v</> -> <$t **$a **$d>$v</>,
    _: $t -> @raise "expected tag, was $t",
}
@fn class($_c: str) $v: html -> @match $v {
    <$t class=$o **$a>*$v</> -> <$t class="$o $_c" **$a>$v</>,
    <$t **$a>*$v</> -> <$t class=$_c **$a>$v</>,
    _: $t -> @raise "expected tag, was $t",
}
@fn style($_s: str) $v: html -> @match $v {
    <$t style=$o **$a>*$v</> -> <$t style="$o$_s" **$a>$v</>,
    <$t **$a>*$v</> -> <$t style=$_s **$a>$v</>,
    _: $t -> @raise "expected tag, was $t",
}

@fn b $v: inline -> <b>$v</>
@fn blockquote($cite?: str) $v: block -> <blockquote cite?=$cite>$v</>
@fn bold $v: inline -> <strong>$v</>
@fn cite $v: inline -> <cite>$v</>
@fn dfn $v: inline -> <dfn>$v</>
@fn emph $v: inline -> <em>$v</>
@fn href($_url: str) $v: inline -> <a href=$_url>$v</>
@fn i $v: inline -> <i>$v</>
@fn image($alt?: str) $url: str -> <img src=$url alt?=$alt>
@fn kbd $v: str -> <kbd>$v</>
@fn quote $v: inline -> <q>$v</>
@fn samp $v: str -> <samp>$v</>
@fn sub $v: inline -> <sub>$v</>
@fn sup $v: inline -> <sup>$v</>
@fn strikethrough $v: inline -> <s>$v</>
@fn underline $v: inline -> <u>$v</>

@fn code($language?: implicit str) $v: str -> {
    @syntax_highlight(language=$language) $v
}
@fn code_block($language?: implicit str, $first_line_no: int? = 1) $v: str -> {
    <pre class="panel listing">
        @syntax_highlight(language=$language, code_block=True, first_line_no=$first_line_no) @fix_indentation $v
    </>
}

@fn trim $s: str -> {
    @match $s {
        " $s " -> $s,
        " $s" -> $s,
        "$s " -> $s,
        _ -> $s,
    }
}

@fn h1 $v: inline -> <h1>$v</>
@fn h2 $v: inline -> <h2>$v</>
@fn h3 $v: inline -> <h3>$v</>
@fn h4 $v: inline -> <h4>$v</>
@fn h5 $v: inline -> <h5>$v</>
@fn h6 $v: inline -> <h6>$v</>

@fn numbered $items: html list -> {
    <ol>@map(@fn $item -> <li>$item</>) $items</>
}

@fn footnote $v: inline -> {
    |<a class="footnote-ref"/><span class="footnote panel">$v</>
}
