use super::string_pool::NameID;

macro_rules! const_strs {
    ($($name: ident = $val: expr,)*) => {
        pub(crate) static CONST_STRS: &'static [&'static str] = &[
            $($val,)*
        ];
        
        /// Constants for ids of names which are always pooled.
        pub(crate) mod str_ids {
            #[repr(u32)]
            #[allow(non_camel_case_types, clippy::upper_case_acronyms)]
            enum ConstStr {
                $($name),*
            }
            
            use super::NameID;
            $(
                #[doc = concat!("The ID of the interned string `\"", $val, "\"`.")]
                pub(crate) const $name: NameID = NameID::of(ConstStr::$name as u32);
            )*
        }
    }
}

const_strs!(
    ANONYMOUS = "<anonymous>",
    _DOCTYPE = "!DOCTYPE",
    A = "a",
    ADD = "add",
    ADDRESS = "address",
    ALL = "all",
    AND = "and",
    ANY = "any",
    AREA = "area",
    ARGS = "args",
    ARTICLE = "article",
    ASIDE = "aside",
    B = "b",
    BASE = "base",
    BIND = "bind",
    BLOCKQUOTE = "blockquote",
    BODY = "body",
    BOOL = "bool",
    BR = "br",
    //CANVAS = "canvas",
    CAPTION = "caption",
    CLASS = "class",
    CODE = "code",
    CODE_BLOCK = "code_block",
    COL = "col",
    COLGROUP = "colgroup",
    COMMAND = "command",
    COMPILE = "compile",
    CONTAINS = "contains",
    COUNT = "count",
    DATA_LINE_NO = "data_line_no",
    DATA_PAREN_NO = "data_paren_no",
    DD = "dd",
    DETAILS = "details",
    DICT = "dict",
    DIV = "div",
    DL = "dl",
    DT = "dt",
    EMBED = "embed",
    ENDS_WITH = "ends_with",
    ENUMERATE = "enumerate",
    ESCAPE_HTML = "escape_html",
    FETCH_HTML = "fetch_html",
    FETCH_RAW = "fetch_raw",
    FIELDSET = "fieldset",
    FIGCAPTION = "figcaption",
    FIGURE = "figure",
    FILE = "file",
    FILTER = "filter",
    FIRST_LINE_NO = "first_line_no",
    FIND = "find",
    FIND_ALL = "find_all",
    FLAT = "flat",
    FOOTER = "footer",
    FORM = "form",
    FROM = "from",
    FUNCTION = "function",
    GET = "get",
    H1 = "h1",
    H2 = "h2",
    H3 = "h3",
    H4 = "h4",
    H5 = "h5",
    H6 = "h6",
    HEAD = "head",
    HEADER = "header",
    HGROUP = "hgroup",
    HR = "hr",
    HREF = "href",
    HTML = "html",
    HTML_NODES = "html_nodes",
    I = "i",
    IFRAME = "iframe",
    IMG = "img",
    IMPORT = "import",
    INCLUDE = "include",
    INPUT = "input",
    INT = "int",
    IS_EMPTY = "is_empty",
    IS_WHITESPACE = "is_whitespace",
    ITEMS = "items",
    JOIN = "join",
    KEY = "key",
    KEYGEN = "keygen",
    KEYS = "keys",
    KWARGS = "kwargs",
    LANGUAGE = "language",
    LEN = "len",
    LI = "li",
    LINK = "link",
    LIST = "list",
    LOWER = "lower",
    MAIN = "main",
    MAP = "map",
    MAX_LENGTH = "max_length",
    MENU = "menu",
    MENUITEM = "menuitem",
    META = "meta",
    NAME = "name",
    NAV = "nav",
    NEGATE = "negate",
    NET = "net",
    NEW = "new",
    NOSCRIPT = "noscript",
    OL = "ol",
    OR = "or",
    P = "p",
    PARAM = "param",
    PARSE = "parse",
    PATH = "path",
    PRE = "pre",
    RAISE = "raise",
    READ = "read",
    REGEX = "regex",
    REVERSED = "reversed",
    SCRIPT = "script",
    SECTION = "section",
    SEP = "sep",
    SLICE = "slice",
    SORTED = "sorted",
    SOURCE = "source",
    SPAN = "span",
    SPLIT = "split",
    STARTS_WITH = "starts_with",
    STR = "str",
    STYLE = "style",
    TABLE = "table",
    TAG_NAME = "tag_name",
    TBODY = "tbody",
    TD = "td",
    TEMPLATE = "template",
    TEST = "test",
    TFOOT = "tfoot",
    TH = "th",
    THEAD = "thead",
    TITLE = "title",
    TR = "tr",
    TRACK = "track",
    TRIM = "trim",
    UL = "ul",
    UNIQUE_ID = "unique_id",
    UPPER = "upper",
    VALUES = "values",
    //VIDEO = "video",
    WBR = "wbr",
    WRITE = "write",
);
